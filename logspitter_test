#!/usr/bin/env bash

set -euo pipefail

logspitter_location=$(find . -name "*logspitter" 2> >(grep -Eiv 'not permitted|denied') >&2)

## The installation script. Pretty straightforward: checks if logspitter is installed, if not, installs it.
INSTALL(){
	if [[ "$(command -v logspitter)" ]] ; then
		echo "Looks like Logspitter is already installed on your system."
		echo "To run it, simply type 'logspitter' and hit ENTER."
		return 0
	elif
		test -z "$logspitter_location"; then

		#[[ $(find . -name "*logspitter" 2> >(grep -Eiv 'not permitted|denied') >&2) -ne 0 ]] ; then
		
		echo "::: Logspitter not found."
		echo "::: Installing from source..."
		wget -q --no-check-certificate https://github.com/bblinder/Log-Spitter/archive/master.zip
		unzip master.zip
		echo "::: copying to /usr/local/bin..."
		echo -e "$logspitter_location"
		#sudo cp $logspitter_location /usr/local/bin
	fi
}

ReadProducerLog(){
	egrep -i '(error)|(fail)|(false)|(rtmp://)|(port)|(\!)\|(drop)|(stamp)|(lost)|(connect)|(connection)|(auth)|(slow)|(check)|(antilag)|(quality)|(suggestion)' "$logfile" > /tmp/ProducerLogs.txt && tail -300 /tmp/ProducerLogs.txt > /tmp/Producerlogs.filtered.txt && open /tmp/ProducerLogs.filtered.txt
}

ReadStudioLog(){
	egrep -i '(error=203)|(error=301)|(error=)|(not\ found)|(rtmp://)|(http_status)|(usage)|(motherboard)|(lost)|(connect)|(connection)|(auth)|(tcp)|(socket)|(deleted)|(network)|(zixi)|(udp)|(antilag)|(code=)' "$logfile" > /tmp/StudioLogs.filtered.txt | uniq -d -i && open /tmp/StudioLogs.filtered.txt
}


INSTALL
echo "Please drag your log file HERE and press ENTER"
read -r logfile

if [[ $logfile == *.log ]] ## will read Producer/Procaster logs
then
	echo "Thanks. Processing now..."
	ReadProducerLog

	## Asks if user would like to open original log file for comparison.
	echo "It's still recommended that you view the entire log file -- you may otherwise miss crucial context."
	echo "Would you like to open the full log file? y/n?"
	read -r response
	
	if [[ $response == "y" ]] ; then
		open "$logfile"
	else
		exit 0
	fi
elif
	[[ $logfile == *.txt ]] ## will read Studio logs
then
	echo "Thanks. Processing now..."
	ReadStudioLog

	echo "It's still recommended that you view the entire log file -- you may otherwise miss crucial context"
	## Asks if user would like to open original log file for comparison.
	echo "Would you like to open the full log file? y/n?"
	read -r response
	
	if [[ $response == "y" ]] ; then
		open "$logfile"
	else
		exit 0
	fi
else
	echo "Oops - not a valid log file." 
	echo "Please use a Studio '.txt' or Producer '.log' file and try again."
fi

