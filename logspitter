#!/bin/bash

## The installation script. Pretty straightforward: checks if logspitter is installed, if not, installs it.
INSTALL(){
	if [[ ( -e /usr/bin/logspitter || -e /usr/local/bin/logspitter ) ]]
  then
	  echo "Looks like Logspitter is already installed on your system."
	  echo "To run it, simply type 'logspitter' and hit ENTER."
  elif
	  [[ ! -e ~/Downloads/Log-Spitter-master/logspitter ]]
  then
	  echo "Could not complete install because a necessary file is missing."
	  echo "Please run the 'UNINSTALL' script and download a new copy of Logspitter at"
	  echo "https://github.com/bblinder/Log-Spitter/archive/master.zip"
	  exit 1

  else
	  sudo cp ~/Downloads/Log-Spitter-master/logspitter /usr/bin/
	  echo "alias logspitter='/usr/bin/logspitter'" >> ~/.bashrc
  fi
}

ReadProducerLog(){
	egrep -i '(error)|(fail)|(false)|(rtmp://)|(port)|(\!)\|(drop)|(stamp)|(lost)|(connect)|(connection)|(auth)|(slow)|(check)|(antilag)|(quality)|(suggestion)' $logfile > /tmp/ProducerLogs.txt && tail -300 /tmp/ProducerLogs.txt > /tmp/Producerlogs.filtered.txt && open /tmp/ProducerLogs.filtered.txt

}

ReadStudioLog(){
	egrep -i '(error=203)|(error=301)|(error=)|(not\ found)|(rtmp://)|(http_status)|(usage)|(motherboard)|(lost)|(connect)|(connection)|(auth)|(tcp)|(socket)|(deleted)|(network)|(zixi)|(udp)|(antilag)|(code=)' $logfile > /tmp/StudioLogs.filtered.txt | uniq -d -i && open /tmp/StudioLogs.filtered.txt

}


# First checks if Logspitter has been previously installed. If not, exits 0.
if [[ ! ( -e /usr/bin/logspitter || -e /usr/local/bin/logspitter ) ]]
then
	INSTALL
fi

echo "Please drag your log file HERE and press ENTER"
read logfile

if [[ $logfile == *.log ]] ## will read Producer/Procaster logs
  then
	  echo "Thanks. Processing now..."
	  ReadProducerLog

	  ## Asks if user would like to open original log file for comparison.
	  echo "It's still recommended that you view the entire log file -- you may otherwise miss crucial context."
	  echo "Would you like to open the full log file? y/n?"

	  read response

	  if [[ $response == "y" ]]
	  then
		  open $logfile
	  else
		  exit 0
	  fi
  elif
	  [[ $logfile == *.txt ]] ## will read Studio logs
    then
    echo "Thanks. Processing now..."
    ReadStudioLog

	  echo "It's still recommended that you view the entire log file -- you may otherwise miss crucial context"
	  ## Asks if user would like to open original log file for comparison.
	  echo "Would you like to open the full log file? y/n?"
	  read response

	  if [[ $response == "y" ]]
	  then
		  open $logfile
	  else
		  exit 0
	  fi

  else
	  echo "Oops - not a valid log file. Please use a Studio '.txt' or Producer '.log' file and try again."
  fi
